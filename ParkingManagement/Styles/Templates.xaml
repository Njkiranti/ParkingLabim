<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:uc="clr-namespace:ParkingManagement.Library.Controls"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"    
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:Helper="clr-namespace:ParkingManagement.Library"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="Button.Static.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF73B4D3" Offset="0"/>
        <GradientStop Color="#FF98D4F0" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush  x:Key="Button.Pressed.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF366681"/>
        <GradientStop Color="#FF6CA0BD" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ParkingInButtons" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"   Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ProgressBar.ProgressGreen" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#E50DFF44" Offset="0.871"/>
        <GradientStop Color="#FF5EC32F" Offset="0.069"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBar.ProgressOrange" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
    	<GradientStop Color="#E5FEE20D" Offset="0.871"/>
    	<GradientStop Color="#FFD64D25" Offset="0.069"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBar.ProgressRed" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#E5FF0D0D" Offset="0.871"/>
        <GradientStop Color="#FFD64D25" Offset="0.069"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
    <Style x:Key="ImsProgressBarTemplate" TargetType="{x:Type ProgressBar}">
    	<Setter Property="Foreground" Value="{StaticResource ProgressBar.ProgressGreen}"/>
    	<Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ProgressBar}">
    				<Grid x:Name="TemplateRoot">    									
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Determinate"/>
    							<VisualState x:Name="Indeterminate">
    								<Storyboard RepeatBehavior="Forever">
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
    										<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
    										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
    										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
    									</DoubleAnimationUsingKeyFrames>
    									<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
    										<EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
    										<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
    										<EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
    									</PointAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
    					<Rectangle x:Name="PART_Track"/>
    					<Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
    						<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
    						<Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
    							<Rectangle.RenderTransform>
    								<TransformGroup>
    									<ScaleTransform/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform/>
    								</TransformGroup>
    							</Rectangle.RenderTransform>
    						</Rectangle>
    					</Grid>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="Orientation" Value="Vertical">
    						<Setter Property="LayoutTransform" TargetName="TemplateRoot">
    							<Setter.Value>
    								<RotateTransform Angle="-90"/>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    					<Trigger Property="IsIndeterminate" Value="true">
    						<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
    					</Trigger>
                        <Trigger Property="Value" Value="100">
                            
                        </Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

	<Style TargetType="Button" x:Key="InputButton">
		<Setter Property="Background" Value="#FF302F37"/>
		<Setter Property="Foreground" Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="White"/>
		<Setter Property="Foreground" Value="Black"/>
				</Trigger>
		</Style.Triggers>
	</Style>

    <ControlTemplate x:Key="InputButtons" TargetType="{x:Type ButtonBase}">
    	<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    		<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    	</Border>
    	<ControlTemplate.Triggers>
    		<Trigger Property="Button.IsDefaulted" Value="True">
    			<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    		</Trigger>
    		<Trigger Property="IsMouseOver" Value="True">
    			<Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
    			<Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
    		</Trigger>
    		<Trigger Property="IsPressed" Value="True">
    			<Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
    			<Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>				
    		</Trigger>
    		<Trigger Property="ToggleButton.IsChecked" Value="True">
    			<Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
    			<Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
    		</Trigger>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
    			<Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
    			<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>






    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="ButtonBase.ClickMode" Value="Press"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}" Margin="0"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                               RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RoundCorners="false"
                               UIElement.SnapsToDevicePixels="true">
                        <Image Source="pack://application:,,,/Images/Keyboard.png" VerticalAlignment="Center" Margin="0"/>
                    </Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="Themes:ButtonChrome.RenderPressed" Value="true"/>
                        </Trigger>                      
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style x:Key="InputTextBox" TargetType="{x:Type uc:ExtendedTextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uc:ExtendedTextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">

                        <Grid>
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            <ToggleButton BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  Background="{TemplateBinding Control.Background}" Grid.Column="1"
                                  Style="{StaticResource ComboBoxToggleButton}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							   Placement="Bottom"
							   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <uc:ucNumPad  Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"  HorizontalAlignment="Right" Width="250" Height="250" ></uc:ucNumPad>
                            </Popup>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!-- Resource dictionary entries should be defined here. -->


    <DataTemplate x:Key="ExtraDetail">
        <Border Style="{StaticResource GradientBackground}" >
            <Grid Margin="5 2 5 0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                </Grid.RowDefinitions>
                <ProgressBar Height="20" x:Name="pBar" Value="{Binding Occupency}" Maximum="{Binding Capacity}"  Style="{DynamicResource ImsProgressBarTemplate}" />
                <TextBlock Text="{Binding PA_Name}" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Occupency, StringFormat=O : {0:}}"/>
                    <TextBlock Grid.Column="1" Text="{Binding Available, StringFormat=A : {0:}}"/>
                    <TextBlock Grid.Column="2" Text="{Binding Capacity, StringFormat=C : {0:}}"/>
                </Grid>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsOverHalf}" Value="true">
                <Setter TargetName="pBar" Property="Foreground" Value="{StaticResource ProgressBar.ProgressOrange}" ></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsOverMaxLimit}" Value="true">
                <Setter TargetName="pBar" Property="Foreground" Value="{StaticResource ProgressBar.ProgressRed}" ></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="PrintHeaderTemplate">
        <Grid>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="15"/>
                <RowDefinition Height="15"/>
                <RowDefinition Height="17"/>
                <RowDefinition Height="15"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" FontSize="16" FontWeight="SemiBold"  Text="{x:Static Helper:GlobalClass.CompanyName }"/>
            <TextBlock Grid.Row="1" FontSize="12" Text="{x:Static Helper:GlobalClass.CompanyAddress}" />
            <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Center">
                <TextBlock FontSize="12" Text="PAN : " />
                <TextBlock FontSize="12" Text="{x:Static Helper:GlobalClass.CompanyPan}" />
            </StackPanel>
            <TextBlock Grid.Row="3" FontSize="14" FontWeight="SemiBold" Text="{Binding Path=(Helper:GlobalClass.ReportName)}" />
            <TextBlock Grid.Row="4" FontSize="12"  Text="{Binding Path=(Helper:GlobalClass.ReportParams)}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PrintFooterTemplate" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Path=(Helper:GlobalClass.PrintTime)}"/>
            <TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="{Binding Path=(Helper:GlobalClass.ReportName)}" />
            <TextBlock Grid.Column="2" HorizontalAlignment="Right" Text="{Binding PageIndex, RelativeSource={RelativeSource AncestorType=syncfusion:PrintPageControl}}" />
        </Grid>
    </DataTemplate>

    <Style x:Key="normalgroupSummaryCell" TargetType="syncfusion:GridGroupSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="groupSummaryCell" TargetType="syncfusion:GridGroupSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="FontWeight" Value="SemiBold" />

    </Style>
    <Style x:Key="normaltableSummaryCell" TargetType="syncfusion:GridTableSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="tableSummaryCell" TargetType="syncfusion:GridTableSummaryCell">
        <Setter Property="BorderBrush" Value="#FF7fd0de" />
        <Setter Property="Foreground" Value="#FF2A2A2A" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>


</ResourceDictionary>