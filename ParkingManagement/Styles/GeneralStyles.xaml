<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
     

    <Style x:Key="TransparentBackground" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    
    
    <Style x:Key="GradientBackground" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop  Offset="4"/>
                    <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
    
    <LinearGradientBrush x:Key="PlainBackgroundBrushKey" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
    </LinearGradientBrush>
  
    <Style x:Key="PlainBackground" TargetType="{x:Type Border}" >
        <Setter Property="Background" Value="{StaticResource PlainBackgroundBrushKey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>
   
    <Style x:Key="NumericColumn" TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

   


    <ControlTemplate x:Key="DoNotValidateTemplate">
        <AdornedElementPlaceholder/>
    </ControlTemplate>
    
    <ControlTemplate x:Key="validationErrorTemplate">
        <StackPanel Orientation="Horizontal" Margin="0">
            <AdornedElementPlaceholder x:Name="ErrorAdorner" />
            <Grid Width="12" Height="12" VerticalAlignment="Center" Margin="5 0 0 0">
                <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <TextBlock Foreground="White" FontWeight="SemiBold" FontSize="8" HorizontalAlignment="Center" 
        					VerticalAlignment="Center" TextAlignment="Center"
        					ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=ErrorAdorner}"><Run Text="X"/></TextBlock>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DoNotValidateTemplate}"/>        
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="BlanchedAlmond" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
            </Trigger>
            <DataTrigger Binding="{Binding TMODE}" Value="NEW">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TMODE}" Value="EDIT">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DoNotValidateTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="BlanchedAlmond" />
            </Trigger>
            <DataTrigger Binding="{Binding TMODE}" Value="NEW">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TMODE}" Value="EDIT">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>
    
    <Style TargetType="Label">
        <Setter Property="Width" Value="120"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="StackPanel">
        <Setter Property="Margin" Value="5 5 0 0"/>
    </Style>

    <Style x:Key="RowStackPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="5 5 0 0"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>
   
    <Style x:Key="SubTotals" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>   
</ResourceDictionary>